#import global_variables

function append_item() {
    local list=$1
    local item=$2
    
    if [ -z $list ] ; then
        echo "$item"
    else
        echo "$list\n$item"
    fi    
}

function get_dependencies_name() {
    local file=$1
    local search_imports="^${_import_symbol}"
    local remove_import="s/^${_import_symbol} //"

    grep $search_imports $file | sed -e "$remove_import" | tr -d ' '
}

function list_dependencies() {
    local file=$1
    local dependencies=$(get_dependencies_name $file)

    for dependency in $dependencies ; do
	    _graph=$(append_item "$_graph" "$file $dependency")
        list_dependencies $dependency
    done
}

function order_files() {
    echo $_graph | tsort | tac
}

function minify_script() { 
    local remove_imports="/^${_import_symbol}/d"
    local remove_file_start="/^${_file_symbol}/d"
    local remove_empty_lines='/^$/d'

    sed -i -e $remove_imports -e $remove_file_start -e $remove_empty_lines $_script
}

function prepare_final_script_file() {
    if [ -f $_script ] ; then
        rm $_script
    fi
    
    touch $_script
}

function generate_script() {
    local start_file=$1

    list_dependencies $start_file

    local files=$(order_files)

    prepare_final_script_file

    for file in $files ; do
        echo "${_file_symbol}${file}" >> $_script
        cat $file >> $_script
    done 

    if ! $_with_symbols ; then
        minify_script
    fi
}

function build() {
    local start_file=$1
    local name=1

    for i in $*
    do 
        name=$(($name + 1))
        case $i in
            --with-symbols )
                _with_symbols=true
            ;;

            --output | -o )
                _script=$(eval "echo \$${name}")
            ;;
        esac
    done

    generate_script "$start_file" 
}




