#import global_variables
#import bso_build

function build_temp_script() {
    local start_script=$1
    build $start_script -o $_run_temp_file --with-symbols
}

function run_temp_script() {
    bash $_run_temp_file $@ 2>&1
}

function get_error_line() {
    local error=$1
    echo "$error" | grep -oP "line [0-9]*" | sed 's/line //'
}

function get_file_start_symbol() {
    local line_number=$1
    local search_file_symbol="^${_file_symbol}"
    head -$line_number "$_run_temp_file" | grep "$search_file_symbol" | tail -1
}

function get_file_name() {
    local file_symbol=$1
    local remove_symbol="s/${_file_symbol}//"
    echo "$file_symbol" | sed $remove_symbol
}

function get_file_line_number() {
    local file_symbol=$1
    grep -n "$file_symbol" $_run_temp_file | cut -d: -f1
}

function link_error() {
    local error=$1

    local line_number=$(get_error_line "$error")
    local file_symbol=$(get_file_start_symbol $line_number)

    local file_name=$(get_file_name $file_symbol)
    local header_line=$(get_file_line_number $file_symbol)
    local file_line_number=$(($line_number - $header_line))

    error=${error/"$_run_temp_file:"/"$file_name:"}
    error=${error/"line $line_number:"/"line $file_line_number:"}

    echo "$error"
}

function show_script_output() {
    local script_result=$1

    while read -r line; do
        if [[ "$line" =~ ^$_run_temp_file:.* ]] ; then
            link_error "$line"
        else
            echo "$line"
        fi
    done <<< "$script_result"
}

function run() {
    local start_script=$1    

    build_temp_script "$start_script"
    show_script_output "$(run_temp_script)"
}
